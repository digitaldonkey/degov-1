version: 2

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      # - code_tests:
      #     requires:
      #       - build
      - integration_tests_prepare_dbimport:
          requires:
            - build
      - integration_tests_dbimport:
          requires:
            - integration_tests_prepare_dbimport
jobs:
  build:
    docker:
      - image: tobiasb/php-cli:7.3-debian
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: "Fix CIRCLE_WORKING_DIRECTORY"
          command: echo 'CIRCLE_WORKING_DIRECTORY="${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}"' >> $BASH_ENV
      - run:
          name: "Create project"
          command: |
            bash ./scripts/ci/composer--create.sh
            cp ~/app/project/composer.lock /tmp/composer.lock
      - restore_cache:
          keys:
            - composer-{{ checksum "/tmp/composer.lock" }}
      - run:
          name: "Install project"
          command: bash ./scripts/ci/composer--install.sh
      - run:
          name: "Run post install"
          command: bash ./scripts/ci/composer--postinstall.sh
      - save_cache:
          key: composer-{{ checksum "/tmp/composer.lock" }}
          paths:
            - ~/.composer
            - ~/app/project
      - persist_to_workspace:
          root: project
          paths:
            - .
  code_tests:
    docker:
      - image: tobiasb/php-cli:7.3-debian
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: "Fix CIRCLE_WORKING_DIRECTORY"
          command: echo 'CIRCLE_WORKING_DIRECTORY="${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}"' >> $BASH_ENV
      - attach_workspace:
          at: project
      - run:
          name: Move code
          command: bash ./scripts/pipeline/default_setup_ci.sh
      - run:
          name: Coding standards
          command: bash ./scripts/ci/checks--cs.sh
      - run:
          name: PHPstan
          command: bash ./scripts/ci/checks--phpstan.sh
      - run:
          name: Npm audit
          command: bash ./scripts/ci/checks--npmaudit.sh
      - run:
          name: PHPUnit
          command: bash ./scripts/ci/tests--phpunit.sh
      - store_test_results:
          path: test-reports
  integration_tests_prepare_dbimport:
    docker:
      - image: tobiasb/php-cli:7.3-debian
      - image: circleci/mysql:5.7
        command: mysqld --max_allowed_packet=65011712
        environment:
            MYSQL_DATABASE: testing
            MYSQL_USER: testing
            MYSQL_PASSWORD: testing

    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: "Fix CIRCLE_WORKING_DIRECTORY"
          command: echo 'CIRCLE_WORKING_DIRECTORY="${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}"' >> $BASH_ENV
      - attach_workspace:
          at: project
      - run:
          name: Move code
          command: bash ./scripts/pipeline/default_setup_ci.sh
      - run:
          name: Prepare database
          command: bash ./scripts/ci/tests--integration--db-import.sh
      - persist_to_workspace:
          root: project
          paths:
            - .
  integration_tests_dbimport:
    docker:
      - image: tobiasb/php-cli:7.3-debian
      - image: circleci/mysql:5.7
        command: mysqld --max_allowed_packet=65011712
        environment:
            MYSQL_DATABASE: testing
            MYSQL_USER: testing
            MYSQL_PASSWORD: testing
      - image: circleci/php:7.3-cli-browsers
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: "Fix CIRCLE_WORKING_DIRECTORY"
          command: echo 'CIRCLE_WORKING_DIRECTORY="${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}"' >> $BASH_ENV
      - attach_workspace:
          at: project
      - run:
          name: Move code
          command: bash ./scripts/pipeline/default_setup_ci.sh
      - run:
          name: Run behat test
          command: bash ./scripts/ci/tests--integration.sh content
      - persist_to_workspace:
          root: project
          paths:
            - .
