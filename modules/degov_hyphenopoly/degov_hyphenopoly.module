<?php

/**
 * @file
 * This module globally attaches hyphenation library.
 */

declare(strict_types=1);

/**
 * Implements hook_library_info_alter().
 */
function degov_hyphenopoly_library_info_alter(&$libraries, $extension) {
  if ($extension === 'degov_hyphenopoly' && array_key_exists('hyphenopoly', $libraries)) {
    /** @var \Drupal\Core\Asset\LibrariesDirectoryFileFinder $library_file_finder */
    $library_file_finder = \Drupal::service('library.libraries_directory_file_finder');
    $library_path = $library_file_finder->find('hyphenopoly');
    if ($library_path !== FALSE) {
      $libraries['hyphenopoly']['js'] = ['/' . $library_path . '/Hyphenopoly_Loader.js' => ['preprocess' => FALSE]];
    }
  }
}

/**
 * Implements hook_page_attachments().
 */
function degov_hyphenopoly_page_attachments(array &$attachments): void {
  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
  $admin_context = \Drupal::service('router.admin_context');
  if (!$admin_context->isAdminRoute()) {
    $conf = \Drupal::config('degov_hyphenopoly.settings');
    /** @var string[]|null $selectors */
    $selectors = $conf->get('hyphenopoly_selectors');

    if (is_array($selectors) && count($selectors) > 0) {
      /** @var \Drupal\Core\Asset\LibrariesDirectoryFileFinder $library_file_finder */
      $library_file_finder = \Drupal::service('library.libraries_directory_file_finder');
      $library_path = $library_file_finder->find('hyphenopoly');
      $lang_code = \Drupal::languageManager()->getCurrentLanguage()->getId();
      $library_language_path = $library_path . '/lang/' . $lang_code;
      if (!is_dir($library_language_path)) {
        return;
      }
      // Javascript inline template.
      $languageJs = '"' . $lang_code . '": "FORCEHYPHENOPOLY"';
      $selectorJs = '';
      foreach ($selectors as $s) {
        $selectorJs .= '      "' . $s . '": { hyphen: "\u00AD" },' . "\n";
      }
      // Remove trailing comma.
      $selectorJs = substr($selectorJs, 0, -1);
      $javascript = <<<EOF
var Hyphenopoly = {
  require: {
    {$languageJs}
  },
  paths: {
      maindir: "/$library_path/",
      patterndir: "/$library_path/patterns/"
  },
  setup: {
    hide: "text",
    selectors: {
{$selectorJs}
    },
  }
};
EOF;

      if (\Drupal::config('system.performance')->get('js.preprocess')) {
        // Compact view when aggregated.
        $javascript = preg_replace('!\s+!', ' ', $javascript);
      }

      $attachments['#attached']['html_head'][] = [
        [
          '#theme' => 'degov_hyphenopoly_inline_js',
          '#script_source' => $javascript,
          '#tag' => 'script',
          '#post_render' => [
            '\Drupal\degov_hyphenopoly\StripDebug::postRenderStripDebug',
          ],
          '#cache' => [
            'tags' => $conf->getCacheTags(),
          ],
        ],
        'degov_hyphenopoly_inline_js',
      ];
      // Attach Library.
      $attachments['#attached']['library'][] = 'degov_hyphenopoly/degov_hyphenopoly';
    }
  }
}

/**
 * Implements hook_theme().
 */
function degov_hyphenopoly_theme(): array {
  return [
    'degov_hyphenopoly_inline_js' => [
      'variables' => [
        'script_source' => NULL,
      ],
    ],
    'degov_hyphenopoly_css' => [
      'variables' => [
        'css_selectors' => NULL,
      ],
    ],
  ];
}
