<?php

/**
 * @file
 */

use Drupal\Component\Utility\Xss;
use Drupal\media\MediaInterface;

/**
 * Implements hook_theme().
 */
function degov_media_social_media_embed_theme($existing, $type, $theme, $path) {

  return [
    'media__some_embed' => [
      'template' => 'media--some-embed',
      'base hook' => 'media',
    ],
    'media__some_embed__embedded' => [
      'template' => 'media--some-embed--embedded',
      'base hook' => 'media',
    ],
    'media__some_embed__preview' => [
      'template' => 'media--some-embed--preview',
      'base hook' => 'media',
    ],
    'media__some_embed__search' => [
      'template' => 'media--some-embed--search',
      'base hook' => 'media',
    ],
    'media__some_embed__usage' => [
      'template' => 'media--some-embed--usage',
      'base hook' => 'media',
    ],
  ];
}

/**
 * Implements hook_preprocess_media__HOOK().
 */
function degov_media_social_media_embed_preprocess_media__some_embed(&$variables) {
  /* @var \Drupal\media\Entity\Media $media */
  $media = $variables['elements']['#media'];

  if ($media instanceof MediaInterface && $media->hasField('field_some_embed_code') && !$media->get('field_some_embed_code')->isEmpty()) {
    $variables['code'] = [
      '#markup' => $media->field_some_embed_code->value,
      '#allowed_tags' => degov_media_social_media_embed_allowed_tags(),
    ];
  }
}

/**
 * Returns allowed tags for some_embed media bundle.
 *
 * Allowed are the tags from Xss::getAdminTagList() plus iframe, blockquote and
 * script. Make sure that bundles of some_embed can only be added/edited by
 * trusted users!
 *
 * @return array
 */
function degov_media_social_media_embed_allowed_tags() {
  return array_merge(Xss::getAdminTagList(), ['iframe', 'blockquote', 'script']);
}
