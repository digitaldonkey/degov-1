<?php

/**
 * @file
 * Drupal hooks implementations for the degov_paragraph_view_reference module.
 */

declare(strict_types=1);

use Drupal\Core\Form\FormStateInterface;
use Drupal\degov_paragraph_view_reference\Form\ViewsSettingsForm;
use Drupal\degov_paragraph_view_reference\Plugin\Field\FieldType\ViewsReferenceOverride;
use Drupal\degov_paragraph_view_reference\Plugin\ViewsReferenceSetting\ViewsReferenceArgument;

/**
 * Implements hook_theme().
 */
function degov_paragraph_view_reference_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__view_reference' => [
      'template' => 'paragraph--view-reference',
      'base hook' => 'paragraph',
    ],
    'paragraph__view_reference__preview' => [
      'template' => 'paragraph--view-reference--preview',
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements hook_field_info_alter().
 */
function degov_paragraph_view_reference_field_info_alter(&$info) {
  if (isset($info['viewsreference'])) {
    $info['viewsreference']['class'] = ViewsReferenceOverride::class;
  }
}

/**
 * Implements hook_viewsreference_viewsreference_setting_info_alter().
 */
function degov_paragraph_view_reference_viewsreference_viewsreference_setting_info_alter(&$info) {
  $info['argument']['class'] = ViewsReferenceArgument::class;
}

/**
 * Implements hook_field_widget_form_alter().
 */
function degov_paragraph_view_reference_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
  /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items */
  $items = $context['items'];
  $field_definition = $items->getFieldDefinition();
  if ($field_definition->getType() === 'viewsreference') {
    $config = \Drupal::config(ViewsSettingsForm::CONFIG_NAME);
    $allowed_forms = $config->get('form_ids');
    $allowed_views = $config->get('allowed_views');
    $form = $form_state->getCompleteForm();
    // If the form is within the allowed ones - alter.
    if ($form && \in_array($form['#form_id'], $allowed_forms, TRUE) && count($allowed_views) > 0) {
      foreach ($element['target_id']['#options'] as $key => $view_name) {
        if (empty($allowed_views[$key])) {
          unset($element['target_id']['#options'][$key]);
        }
      }
    }
    // We use this class in the behat test.
    $element['target_id']['#attributes']['class'][] = 'viewreference_target_id';
  }
}
