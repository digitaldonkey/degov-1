<?php

use Drupal\Core\Config\Config;
use Drupal\degov_common\Entity\ConfigStorageFactory;

/**
 * Implements hook_install().
 */
function node_action_install() {
  node_action_remove_unwanted_actions();

  /**
   * @var ConfigStorageFactory $configFactory
   */
  $configFactory = \Drupal::service('degov_common.config_storage_factory');
  /**
   * @var Config $config
   */
  $config = $configFactory->getEditable('system.action.node_unpublish_action');
  $config->set('plugin', 'node_action:entity:unpublish_action:node')->save();

  /**
   * @var Config $config
   */
  $config = $configFactory->getEditable('system.action.node_publish_action');
  $config->set('plugin', 'node_action:entity:publish_action:node')->save();

  $config = $configFactory->getEditable('system.action.node_change_author_action');
  if ($config->get('langcode') === 'de') {
    $config->set('label', t('Change the author', [], ['langcode' => 'de']))->save(TRUE);
  }

  $config = $configFactory->getEditable('system.action.node_moderation_state_action');
  if ($config->get('langcode') === 'de') {
    $config->set('label', t('Change moderation state', [], ['langcode' => 'de']))->save(TRUE);
  }
}

function node_action_remove_unwanted_actions() {
  /**
   * @var ConfigStorageFactory $configStorageFactory
   */
  $configStorageFactory = \Drupal::service('degov_common.config_storage_factory');
  $configsToDelete = [
    'system.action.node_make_sticky_action',
    'system.action.node_make_unsticky_action',
    'system.action.node_promote_action',
    'system.action.node_save_action',
    'system.action.node_unpromote_action',
    'system.action.pathauto_update_alias_node',
  ];

  foreach ($configsToDelete as $configToDelete) {
    $config = $configStorageFactory->getEditable($configToDelete);
    $config->delete();
  }
}

/**
 * Implements hook_uninstall().
 */
function node_action_uninstall() {
  /**
   * @var ConfigStorageFactory $configStorageFactory
   */
  $configStorageFactory = \Drupal::service('degov_common.config_storage_factory');

  /**
   * @var Config $config
   */
  $config = $configStorageFactory->getEditable('system.action.node_unpublish_action');
  $config->set('plugin', 'node_action:entity:unpublish_action:node')->save();
}
